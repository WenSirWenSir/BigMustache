package shlm.canshu.com.canshu.Local_Act;import android.annotation.SuppressLint;import android.os.Bundle;import android.text.InputType;import android.text.TextUtils;import android.util.Log;import android.view.MotionEvent;import android.view.View;import android.widget.EditText;import android.widget.TextView;import android.widget.Toast;import shlm.canshu.com.canshu.LazyCatProgramUnt.CompanyAct.LazyCatAct;import shlm.canshu.com.canshu.LazyCatProgramUnt.JsonEndata;import shlm.canshu.com.canshu.LazyCatProgramUnt.Net;import shlm.canshu.com.canshu.LazyCatProgramUnt.Tools;import shlm.canshu.com.canshu.Local_Page.TAGS;import shlm.canshu.com.canshu.R;public class Act_login extends LazyCatAct {    private EditText input_account;    private String MSG = "Act_login.java[+]";    private EditText input_password;    private TextView input_go;    @SuppressLint({"ClickableViewAccessibility", "NewApi"})    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.login);        setTransparentBar();        /*设置边框*/        input_account = findViewById(R.id.login_input_account);        input_account.setBackground(Tools.CreateDrawable(1, "#e9e9e9", "#e9e9e9", 15));        input_password = findViewById(R.id.login_input_password);        input_password.setBackground(Tools.CreateDrawable(1, "#e9e9e9", "#e9e9e9", 15));        /*设置登录边框*/        input_go = findViewById(R.id.login_btngo);        input_go.setBackground(Tools.CreateDrawable(1, "#efefef", "#efefef", 5));        init();    }    @SuppressLint("ClickableViewAccessibility")    private void init() {        input_password.setOnFocusChangeListener(new View.OnFocusChangeListener() {            @Override            public void onFocusChange(View v, boolean hasFocus) {                if (hasFocus) {                    input_password.setText("");                    Tools.showKeyboard(input_password);                    input_password.setInputType(InputType.TYPE_TEXT_VARIATION_PASSWORD |                            InputType.TYPE_CLASS_TEXT);                    /*获取焦点*/                }            }        });        input_account.setOnTouchListener(new View.OnTouchListener() {            @Override            public boolean onTouch(View v, MotionEvent event) {                input_account.setText("");                Tools.showKeyboard(input_account);                return false;            }        });        input_go.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                /*登录事件*/                String account = input_account.getText().toString();                String password = input_password.getText().toString();                if (!TextUtils.isEmpty(account) && !TextUtils.isEmpty(password)) {                    /*都不为空*/                    Log.i(MSG, "登录名称:" + account + " 密码为:" + password);                    Net.doGet(getApplicationContext(), TAGS.LOGIN_SERVICE, new Net                            .onVisitInterServiceListener() {                        @Override                        public void onSucess(String tOrgin) {                            JsonEndata jsonEndata = new JsonEndata(tOrgin);                            /*获取登录状态*/                            String Status = jsonEndata.getJsonKeyValue(TAGS.LOGIN_VALUE_TAGS                                    .VALUE_TAGS_STATUS);                            if (Status.equals(TAGS.LOGIN_STATUS.STATUS_OK)) {                                /*登录成功*/                                Toast.makeText(getApplicationContext(), "登录成功", Toast                                        .LENGTH_SHORT).show();                            }                            if (Status.equals(TAGS.LOGIN_STATUS.STATUS_HAVEING)) {                                Toast.makeText(getApplicationContext(), "登录密码或者登录的账户错误,请检查",                                        Toast.LENGTH_SHORT).show();                            }                            Log.i(MSG, "登录状态" + jsonEndata.getJsonKeyValue("status"));                            /*保存登录的状态*/                            Tools.settoKen(getApplicationContext(), TAGS.LOCAL_TAGS                                    .LOCAL_TAGS_TOKEN_ACCOUNT, jsonEndata.getJsonKeyValue(TAGS                                    .LOGIN_VALUE_TAGS.VALUE_TAGS_ACCOUNT));                            /*保存登录的密码*/                            Tools.settoKen(getApplicationContext(), TAGS.LOCAL_TAGS                                    .LOCAL_TAGS_TOKEN_PASSWORD, jsonEndata.getJsonKeyValue(TAGS                                    .LOGIN_VALUE_TAGS.VALUE_TAGS_PASSWORD));                        }                        @Override                        public void onNotConnect() {                        }                        @Override                        public void onFail(String tOrgin) {                        }                    }, TAGS.LOGIN_TAGS.TAG_ACCOUNT, account, TAGS.LOGIN_TAGS.TAG_PASSWORD,                            password);                } else {                    Log.e(MSG, "登录的账户或者密码为空");                }            }        });    }}