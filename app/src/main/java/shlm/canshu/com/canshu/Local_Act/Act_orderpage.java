package shlm.canshu.com.canshu.Local_Act;import android.annotation.SuppressLint;import android.os.Bundle;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ListView;import android.widget.TextView;import android.widget.Toast;import org.xmlpull.v1.XmlPullParser;import org.xmlpull.v1.XmlPullParserException;import java.io.IOException;import java.util.ArrayList;import java.util.List;import shlm.canshu.com.canshu.LazyCatProgramUnt.CompanyAct.LazyCatAct;import shlm.canshu.com.canshu.LazyCatProgramUnt.Factory.XmlanalysisFactory;import shlm.canshu.com.canshu.LazyCatProgramUnt.Net;import shlm.canshu.com.canshu.LazyCatProgramUnt.Tools;import shlm.canshu.com.canshu.Local_Page.TAGS;import shlm.canshu.com.canshu.R;/*订单列表*/public class Act_orderpage extends LazyCatAct {    private OrderPag orderPag = null;    private ArrayList<OrderPag> orderpagelist = new ArrayList<OrderPag>();    private String MSG = "Act_orderpage.java[+]";    private ListView listview;    @Override    protected void onCreate(Bundle savedInstanceState) {        setTransparentBar();        setContentView(R.layout.act_orderpage);        listview = findViewById(R.id.act_orderpage_listview);/*listview控件*/        /*获取数据信息*/        Net.doGet(getApplicationContext(),                "http://47.102.205.26/Bigmustache/search/search_orderpage.php", new Net                        .onVisitInterServiceListener() {            @Override            public void onSucess(String tOrgin) {                XmlanalysisFactory xmlanalysisFactory = new XmlanalysisFactory(tOrgin.toString());                xmlanalysisFactory.Startanalysis(new XmlanalysisFactory.XmlanalysisInterface() {                    @Override                    public void onFaile() {                    }                    @Override                    public void onStartDocument() {                    }                    @Override                    public void onStartTag(String tag, XmlPullParser pullParser, Integer id) {                        try {                            if (tag.equals("orderpage")) {                                orderPag = new OrderPag();                            }                            if (tag.equals("PAYDAY")) {                                if (orderPag != null) {                                    orderPag.setPay_day(pullParser.nextText().toString().trim());                                }                            }                            if (tag.equals("PAYTYPE")) {                                if (orderPag != null) {                                    orderPag.setPay_type(pullParser.nextText().toString().trim());                                }                            }                        } catch (Exception e) {                        }                    }                    @Override                    public void onEndTag(String tag, XmlPullParser pullParser, Integer id) {                        if (tag.equals("orderpage")) {                            orderpagelist.add(orderPag);                            orderPag = null;                        }                    }                    @Override                    public void onEndDocument() {                        Log.i(MSG, "合计数量:" + orderpagelist.size());                        myadapter adapter = new myadapter(orderpagelist);                        listview.setAdapter(adapter);                    }                });            }            @Override            public void onNotConnect() {            }            @Override            public void onFail(String tOrgin) {            }        }, "account", Tools.gettoKen(getApplicationContext(), TAGS.LOCAL_TAGS                        .LOCAL_TAGS_TOKEN_ACCOUNT), "password", Tools.gettoKen                        (getApplicationContext(), TAGS.LOCAL_TAGS.LOCAL_TAGS_TOKEN_PASSWORD));        super.onCreate(savedInstanceState);    }    class OrderPag {        private String pay_day, pay_type, login_type, check_type, phone_type, start_in, end_out,                status, check_done, pay_done, order_id;        public String getPay_day() {            return pay_day;        }        public void setPay_day(String pay_day) {            this.pay_day = pay_day;        }        public String getPay_type() {            return pay_type;        }        public void setPay_type(String pay_type) {            this.pay_type = pay_type;        }        public String getLogin_type() {            return login_type;        }        public void setLogin_type(String login_type) {            this.login_type = login_type;        }        public String getCheck_type() {            return check_type;        }        public void setCheck_type(String check_type) {            this.check_type = check_type;        }        public String getPhone_type() {            return phone_type;        }        public void setPhone_type(String phone_type) {            this.phone_type = phone_type;        }        public String getStart_in() {            return start_in;        }        public void setStart_in(String start_in) {            this.start_in = start_in;        }        public String getEnd_out() {            return end_out;        }        public void setEnd_out(String end_out) {            this.end_out = end_out;        }        public String getStatus() {            return status;        }        public void setStatus(String status) {            this.status = status;        }        public String getCheck_done() {            return check_done;        }        public void setCheck_done(String check_done) {            this.check_done = check_done;        }        public String getPay_done() {            return pay_done;        }        public void setPay_done(String pay_done) {            this.pay_done = pay_done;        }        public String getOrder_id() {            return order_id;        }        public void setOrder_id(String order_id) {            this.order_id = order_id;        }    }    class myadapter extends BaseAdapter {        private List list = new ArrayList<OrderPag>();        public myadapter(ArrayList<OrderPag> list) {            this.list = list;        }        @Override        public int getCount() {            return this.list.size();        }        @Override        public Object getItem(int position) {            return null;        }        @Override        public long getItemId(int position) {            return 0;        }        @SuppressLint("NewApi")        @Override        public View getView(int position, View convertView, ViewGroup parent) {            mypage page;            if (convertView == null) {                convertView = LayoutInflater.from(getApplicationContext()).inflate(R.layout                        .item_orderpage, null);                page = new mypage();                page.btn_check = convertView.findViewById(R.id.item_orderpage_btncheck);                page.btn_check.setBackground(Tools.CreateDrawable(1, "#f30d88", "#f30d88", 5));            } else {                page = (mypage) convertView.getTag();            }            /*处理业务代码*/            page.btn_check.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    Net.doGet(getApplicationContext(),                            "http://47.102.205.26/Bigmustache/checkCode/start_check.php", new Net                                    .onVisitInterServiceListener() {                        @Override                        public void onSucess(String tOrgin) {                            if (tOrgin.equals("1")) {                                LazyCatActStartActivity(Act_getcode.class, false);                            } else {                                Toast.makeText(getApplicationContext(), "暂时不支持登录,请在60秒之后重试",                                        Toast.LENGTH_SHORT).show();                            }                        }                        @Override                        public void onNotConnect() {                        }                        @Override                        public void onFail(String tOrgin) {                        }                    }, "login_phone", "15206036936", "type", "aiqiyi", "account", Tools.gettoKen                                    (getApplicationContext(), TAGS.LOCAL_TAGS                                            .LOCAL_TAGS_TOKEN_ACCOUNT), "password", Tools                                    .gettoKen(getApplicationContext(), TAGS.LOCAL_TAGS                                            .LOCAL_TAGS_TOKEN_PASSWORD), "send_phone",                            "13599627701");                }            });            return convertView;        }        class mypage {            TextView btn_check;        }    }}